<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <repositories>
        <repository>
            <id>releases</id>
            <name>Nhnent Maven Release Repository</name>
            <url>http://nexus.nhnent.com/content/repositories/releases/</url>
        </repository>
        <repository>
            <id>snapshots</id>
            <name>Nhnent Maven Snapshot Repository</name>
            <url>http://nexus.nhnent.com/content/repositories/snapshots/</url>
        </repository>
    </repositories>

    <groupId>com.nhnent.tardis</groupId>
    <artifactId>sample_multigame_server</artifactId>
    <version>0.1</version>

    <profiles>
        <profile>
            <id>template-java8</id>
            <activation>
                <jdk>1.8</jdk>
                <activeByDefault>true</activeByDefault>
            </activation>
            <properties>
                <jdk.version>8</jdk.version>
                <jdk.classifier>jdk8</jdk.classifier>
                <maven.compiler.source>8</maven.compiler.source>
                <maven.compiler.target>8</maven.compiler.target>
            </properties>
        </profile>

        <profile>
            <id>template-java11</id>
            <activation>
                <jdk>11.0</jdk>
                <activeByDefault>false</activeByDefault>
            </activation>
            <properties>
                <jdk.version>11</jdk.version>
                <jdk.classifier>jdk11</jdk.classifier>
                <maven.compiler.source>8</maven.compiler.source>
                <maven.compiler.target>11</maven.compiler.target>
            </properties>
        </profile>
    </profiles>

    <dependencies>
        <!-- gameanvil -->
        <dependency>
            <groupId>com.nhn.gameanvil</groupId>
            <artifactId>gameanvil</artifactId>
            <version>1.1.0-${jdk.classifier}</version>
        </dependency>

        <!-- gamehammer -->
        <dependency>
            <groupId>com.nhn.gameanvil</groupId>
            <artifactId>gamehammer</artifactId>
            <version>1.0.1-${jdk.classifier}</version>
        </dependency>
        <!-- junit -->
        <dependency>
            <groupId>junit</groupId>
            <artifactId>junit</artifactId>
            <version>4.12</version>
        </dependency>
    </dependencies>

    <name>sample_multigame_server</name>

    <build>
        <plugins>
            <plugin>
                <artifactId>maven-compiler-plugin</artifactId>
                <version>3.2</version>
                <configuration>
                    <source>1.8</source>
                    <target>1.8</target>
                    <encoding>UTF-8</encoding>
                </configuration>
            </plugin>

            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-jar-plugin</artifactId>
                <version>2.3.2</version>
                <configuration>
                    <archive>
                        <manifest>
                            <!-- executable jar 에서 main 으로 실행 될 클래스 -->
                            <mainClass>com.nhn.gameanvil.sample.Main</mainClass>
                            <!-- jar 파일 안의 META-INF/MANIFEST.MF 에 classpath 정보가 추가됨 -->
                            <addClasspath>true</addClasspath>
                            <!-- library path (root/lib) -->
                            <classpathPrefix>lib/</classpathPrefix>
                        </manifest>
                    </archive>
                </configuration>
            </plugin>

            <!-- package 실행 할 때 dependency 들을 lib 폴더로 이동 시켜 줌 -->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-dependency-plugin</artifactId>
                <version>2.3</version>
                <executions>
                    <execution>
                        <id>copy-dependencies</id>
                        <phase>package</phase>
                        <goals>
                            <goal>copy-dependencies</goal>
                        </goals>
                    </execution>
                </executions>
                <configuration>
                    <!-- eclipse 에서는 target 밑의 lib 에 생성 됨 -->
                    <outputDirectory>target/lib</outputDirectory>
                    <overWriteIfNewer>true</overWriteIfNewer>
                </configuration>
            </plugin>

            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-surefire-plugin</artifactId>
                <version>2.19.1</version>
                <configuration>
                    <skipTests>true</skipTests>
                </configuration>
            </plugin>

            <plugin>
                <groupId>org.codehaus.mojo</groupId>
                <artifactId>exec-maven-plugin</artifactId>
                <version>1.6.0</version>
                <executions>
                    <execution>
                        <goals>
                            <goal>exec</goal>
                        </goals>
                    </execution>
                </executions>
                <configuration>
                    <executable>java</executable>
                    <arguments>
                        <!-- quasar -->
                        <argument>-javaagent:${project.basedir}${file.separator}src${file.separator}main${file.separator}resources${file.separator}META-INF${file.separator}quasar-core-0.7.6.jar=b</argument>
                        <!-- Main class -->
                        <argument>com.nhn.gameanvil.sample.Main</argument>
                    </arguments>
                </configuration>
            </plugin>
            <!-- Ant task for Quasar AOT instrumentation -->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-antrun-plugin</artifactId>
                <executions>
                    <execution>
                        <id>Running AOT instrumentation</id>
                        <phase>compile</phase>

                        <configuration>
                            <tasks>
                                <taskdef name="instrumentationTask" classname="co.paralleluniverse.fibers.instrument.InstrumentationTask" classpathref="maven.dependency.classpath"/>
                                <instrumentationTask>
                                    <fileset dir="${project.build.directory}/classes/" includes="**/*.class"/>
                                </instrumentationTask>
                            </tasks>
                        </configuration>

                        <goals>
                            <goal>run</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>
        </plugins>
        <resources>
            <resource>
                <directory>src/main/resources</directory>
            </resource>
        </resources>
    </build>
</project>
